<?php

/**
 * @file
 * gin_toolbar.module
 */

use Drupal\Core\Render\Markup;

/**
 * Implements hook_preprocess_HOOK() for page_attachments.
 */
function gin_toolbar_page_attachments_alter(&$page) {
  // Get path.
  $route = \Drupal::routeMatch()->getRouteName();

  // Is User logged in?
  $logged_in = \Drupal::currentUser()->isAuthenticated();

  // Get user config accent color.
  $config = \Drupal::config('gin.settings');
  $accent_color = $config->get('accent_color');

  if ($accent_color) {
    $accent_color_hover = _gin_toolbar_adjust_brightness($accent_color, -0.1);
    $accent_color_active = _gin_toolbar_adjust_brightness($accent_color, -0.2);
    $accent_color_a20 = _gin_toolbar_adjust_brightness($accent_color, 0.92);
    $accent_color_svg = str_replace('#', '%23', $accent_color);

    $accent_color_css = <<<EOH
      body {
        --colorGinPrimary: $accent_color;
        --colorGinPrimaryHover: $accent_color_hover;
        --colorGinPrimaryActive: $accent_color_active;
      }
EOH;
  }

  if ($logged_in && $accent_color) {
    $page['#attached']['html_head'][] = [
    [
      '#tag' => 'style',
      '#value' => Markup::create($accent_color_css),
    ],
      'gin-accent-color',
    ];
  }

  if ($logged_in) {
    $page['#attached']['library'][] = 'gin/gin_toolbar';
  }
}

/**
 * Registry_alter()
 */
function gin_toolbar_theme_registry_alter(&$theme_registry) {
  $theme_registry['toolbar']['path'] = drupal_get_path('module', 'gin_toolbar') . '/templates';
  $theme_registry['menu__toolbar']['path'] = drupal_get_path('module', 'gin_toolbar') . '/templates';
}

/**
 * Increases or decreases the brightness of a color.
 */
function _gin_toolbar_adjust_brightness($hexCode, $adjustPercent) {
  $hexCode = ltrim($hexCode, '#');

  if (strlen($hexCode) == 3) {
    $hexCode = $hexCode[0] . $hexCode[0] . $hexCode[1] . $hexCode[1] . $hexCode[2] . $hexCode[2];
  }

  $hexCode = array_map('hexdec', str_split($hexCode, 2));

  foreach ($hexCode as & $color) {
    $adjustableLimit = $adjustPercent < 0 ? $color : 255 - $color;
    $adjustAmount = ceil($adjustableLimit * $adjustPercent);

    $color = str_pad(dechex($color + $adjustAmount), 2, '0', STR_PAD_LEFT);
  }

  return '#' . implode($hexCode);
}
